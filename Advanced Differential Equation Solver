(* ===================================================== *)
(* Advanced Differential Equation Solver - Final Version *)
(* Full Classification and Clean Output                  *)
(* ===================================================== *)

ClearAll["Global`*"];

(* === Step 1: Manual Input === *)
Print["Please enter your differential equation (e.g., y''[x] + 3 y'[x] + 2 y[x] == 0):"];
eq = Input["Enter differential equation: "];

Print["Equation entered: ", eq];

(* === Step 2: General Classification === *)

(* Check if it's an Ordinary Differential Equation *)
odeQ = FreeQ[eq, Derivative[_, _][__]];

(* Order of the equation *)
order = Max[Cases[eq, Derivative[n_][y][x_] :> n, Infinity]];

(* Linearity Check *)
linearQ = FreeQ[eq, (y[x])^n_ /; n > 1 || Derivative[_][y][x]^n_ /; n > 1];

(* Constant Coefficient Check *)
constantCoeffQ = FreeQ[eq, x];

(* Homogeneity Check *)
homogeneousQ = TrueQ[Simplify[eq[[2]] === 0]];

(* === Step 3: Display Classification === *)
Print["üìò Classification Summary:"];
Print["- Ordinary Differential Equation: ", If[odeQ, "Yes", "No"]];
Print["- Order: ", order];
Print["- Linearity: ", If[linearQ, "Linear", "Nonlinear"]];
Print["- Coefficients: ", If[constantCoeffQ, "Constant", "Variable"]];
Print["- Homogeneous: ", If[homogeneousQ, "Yes", "No"]];

(* === Step 4: Solver Choice === *)
solution =.;
numericQ = False;

If[constantCoeffQ,
  (* Constant Coefficient Case *)
  Print["üßÆ Solving using constant coefficient method..."];
  solution = Quiet@Check[DSolve[eq, y[x], x], $Failed];

  If[solution === $Failed,
    Print["‚ö†Ô∏è Symbolic solve failed. Trying numerical solution..."];
    initConds = {y[0] == 1, y'[0] == 0};  (* Modify as needed *)
    solution = NDSolve[{eq, Sequence @@ initConds}, y, {x, 0, 10}];
    numericQ = True;,
    Print["‚úÖ Symbolic solution: ", solution];
  ];

  (* Step-by-step: Characteristic Equation *)
  Print["üìù Step-by-step: Characteristic Equation"];
  charEq = eq /. {y''[x] -> r^2, y'[x] -> r, y[x] -> 1};
  roots = Solve[charEq[[1]] == 0, r];
  Print["Characteristic Equation: ", charEq == 0];
  Print["Roots: ", roots];
  ,
  (* Variable Coefficient Case *)
  Print["üßÆ Solving using variable coefficient method..."];
  solution = Quiet@Check[DSolve[eq, y[x], x], $Failed];

  If[solution === $Failed,
    Print["‚ö†Ô∏è Symbolic solve failed. Trying numerical solution..."];
    initConds = {y[0] == 1, y'[0] == 0};  (* Modify as needed *)
    solution = NDSolve[{eq, Sequence @@ initConds}, y, {x, 0, 10}];
    numericQ = True;,
    Print["‚úÖ Symbolic solution: ", solution];
  ];
];
